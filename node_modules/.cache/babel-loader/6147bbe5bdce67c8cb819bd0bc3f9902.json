{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Session.js\";\n// import React from 'react';\n// // import logo from './logo.svg';\n// import './Session.css';\n// function App() {\n//   var gapi = window.gapi\n//   /* \n//     Update with your own Client Id and Api key \n//   */\n//   var CLIENT_ID = \"708105023641-t350k3usoo751tfnilu9hrdokjmmli8v.apps.googleusercontent.com\"\n//   var API_KEY = \"AIzaSyBiH7_PQxnILxrGC_I1F8_HA1OgQEiySIU\"\n//   var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n//   var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n//   const handleClick = () => {\n//     gapi.load('client:auth2', () => {\n//       console.log('loaded client')\n//       gapi.client.init({\n//         apiKey: API_KEY,\n//         clientId: CLIENT_ID,\n//         discoveryDocs: DISCOVERY_DOCS,\n//         scope: SCOPES,\n//       })\n//       gapi.client.load('calendar', 'v3', () => console.log('bam!'))\n//       gapi.auth2.getAuthInstance().signIn()\n//       .then(() => {\n//         var event = {\n//           'summary': 'Awesome Event!',\n//           'location': '800 Howard St., San Francisco, CA 94103',\n//           'description': 'Really great refreshments',\n//           'start': {\n//             'dateTime': '2020-06-28T09:00:00-07:00',\n//             'timeZone': 'America/Los_Angeles'\n//           },\n//           'end': {\n//             'dateTime': '2020-06-28T17:00:00-07:00',\n//             'timeZone': 'America/Los_Angeles'\n//           },\n//           'recurrence': [\n//             'RRULE:FREQ=DAILY;COUNT=2'\n//           ],\n//           'attendees': [\n//             {'email': 'lpage@example.com'},\n//             {'email': 'sbrin@example.com'}\n//           ],\n//           'reminders': {\n//             'useDefault': false,\n//             'overrides': [\n//               {'method': 'email', 'minutes': 24 * 60},\n//               {'method': 'popup', 'minutes': 10}\n//             ]\n//           }\n//         }\n//         var request = gapi.client.calendar.events.insert({\n//           'calendarId': 'primary',\n//           'resource': event,\n//         })\n//         request.execute(event => {\n//           console.log(event)\n//           window.open(event.htmlLink)\n//         })\n//         /*\n//             Uncomment the following block to get events\n//         */\n//         // get events\n//         gapi.client.calendar.events.list({\n//           'calendarId': 'primary',\n//           'timeMin': (new Date()).toISOString(),\n//           'showDeleted': false,\n//           'singleEvents': true,\n//           'maxResults': 10,\n//           'orderBy': 'startTime'\n//         }).then(response => {\n//           const events = response.result.items\n//           console.log('EVENTS: ', events)\n//         })\n//       })\n//     })\n//   }\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//         <p>Click to add event to Google Calendar</p>\n//         <p style={{fontSize: 18}}>Uncomment the get events code to get events</p>\n//         <p style={{fontSize: 18}}>Don't forget to add your Client Id and Api key</p>\n//         <button style={{width: 100, height: 50}} onClick={handleClick}>Add Event</button>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\nimport React, { Component } from 'react';\nimport './Session.css';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\nimport { useState } from 'react';\n\nfunction Session() {\n  const responseGoogle = response => {\n    console.log(response);\n    const {\n      code\n    } = response;\n    axios.post('/api/create-tokens', {\n      code\n    }).then(response => {\n      console.log(response.data);\n      setSignedIn(true);\n    }).catch(error => console.log(error.message));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(summary, description, location, startDateTime, endDatetime)\n\n    axios.post('/api/create-event', {\n      summary,\n      description,\n      location,\n      startDateTime,\n      endDatetime\n    }).then(response => {\n      console.log(response.data);\n      setSignedIn(true);\n    }).catch(error => console.log(error.message));\n  };\n\n  const responseError = error => {\n    console.log(error);\n  };\n\n  const [summary, setSummary] = useState('');\n  const [description, setDescription] = useState('');\n  const [location, setLocation] = useState('');\n  const [startDateTime, setStartDateTime] = useState('');\n  const [endDatetime, setEndDateTime] = useState('');\n  const [signedIn, setSignedIn] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"Add Sessions and Events\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"708105023641-t350k3usoo751tfnilu9hrdokjmmli8v.apps.googleusercontent.com\",\n    buttonText: \"Add sessions and events\",\n    onSuccess: responseGoogle,\n    onFailure: responseError,\n    cookiePolicy: 'single_host_origin',\n    responseType: \"code\",\n    accessType: \"offline\",\n    scope: \"openid email profile https://www.googleapis.com/auth/calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"summary\",\n    value: summary,\n    onChange: e => setSummary(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"startDateTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, \"Starting at\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime\",\n    id: \"startdate\",\n    value: startDateTime,\n    onChange: e => setStartDateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"endDateTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, \"End date\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"datetime-local\",\n    id: \"enddate\",\n    value: endDatetime,\n    onChange: e => setEndDateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, \"Create event\"))));\n}\n\nexport default Session;","map":{"version":3,"sources":["/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Session.js"],"names":["React","Component","GoogleLogin","axios","useState","Session","responseGoogle","response","console","log","code","post","then","data","setSignedIn","catch","error","message","handleSubmit","e","preventDefault","summary","description","location","startDateTime","endDatetime","responseError","setSummary","setDescription","setLocation","setStartDateTime","setEndDateTime","signedIn","target","value"],"mappings":"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","sourcesContent":["// import React from 'react';\n// // import logo from './logo.svg';\n// import './Session.css';\n\n\n// function App() {\n\n//   var gapi = window.gapi\n//   /* \n//     Update with your own Client Id and Api key \n//   */\n//   var CLIENT_ID = \"708105023641-t350k3usoo751tfnilu9hrdokjmmli8v.apps.googleusercontent.com\"\n//   var API_KEY = \"AIzaSyBiH7_PQxnILxrGC_I1F8_HA1OgQEiySIU\"\n//   var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n//   var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n\n//   const handleClick = () => {\n//     gapi.load('client:auth2', () => {\n//       console.log('loaded client')\n\n//       gapi.client.init({\n//         apiKey: API_KEY,\n//         clientId: CLIENT_ID,\n//         discoveryDocs: DISCOVERY_DOCS,\n//         scope: SCOPES,\n//       })\n\n//       gapi.client.load('calendar', 'v3', () => console.log('bam!'))\n\n//       gapi.auth2.getAuthInstance().signIn()\n//       .then(() => {\n        \n//         var event = {\n//           'summary': 'Awesome Event!',\n//           'location': '800 Howard St., San Francisco, CA 94103',\n//           'description': 'Really great refreshments',\n//           'start': {\n//             'dateTime': '2020-06-28T09:00:00-07:00',\n//             'timeZone': 'America/Los_Angeles'\n//           },\n//           'end': {\n//             'dateTime': '2020-06-28T17:00:00-07:00',\n//             'timeZone': 'America/Los_Angeles'\n//           },\n//           'recurrence': [\n//             'RRULE:FREQ=DAILY;COUNT=2'\n//           ],\n//           'attendees': [\n//             {'email': 'lpage@example.com'},\n//             {'email': 'sbrin@example.com'}\n//           ],\n//           'reminders': {\n//             'useDefault': false,\n//             'overrides': [\n//               {'method': 'email', 'minutes': 24 * 60},\n//               {'method': 'popup', 'minutes': 10}\n//             ]\n//           }\n//         }\n\n//         var request = gapi.client.calendar.events.insert({\n//           'calendarId': 'primary',\n//           'resource': event,\n//         })\n\n//         request.execute(event => {\n//           console.log(event)\n//           window.open(event.htmlLink)\n//         })\n        \n\n//         /*\n//             Uncomment the following block to get events\n//         */\n        \n//         // get events\n//         gapi.client.calendar.events.list({\n//           'calendarId': 'primary',\n//           'timeMin': (new Date()).toISOString(),\n//           'showDeleted': false,\n//           'singleEvents': true,\n//           'maxResults': 10,\n//           'orderBy': 'startTime'\n//         }).then(response => {\n//           const events = response.result.items\n//           console.log('EVENTS: ', events)\n//         })\n        \n    \n\n//       })\n//     })\n//   }\n\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//         <p>Click to add event to Google Calendar</p>\n//         <p style={{fontSize: 18}}>Uncomment the get events code to get events</p>\n//         <p style={{fontSize: 18}}>Don't forget to add your Client Id and Api key</p>\n//         <button style={{width: 100, height: 50}} onClick={handleClick}>Add Event</button>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\nimport React, { Component } from 'react';\nimport './Session.css'\nimport { GoogleLogin } from 'react-google-login'\nimport axios from 'axios';\nimport { useState } from 'react'\n\n\nfunction Session() {\n\n  const responseGoogle = response => {\n    console.log(response)\n    const { code } = response\n    axios.post('/api/create-tokens', { code })\n      .then(response => {\n        console.log(response.data)\n        setSignedIn(true)\n      })\n      .catch(error => console.log(error.message))\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    // console.log(summary, description, location, startDateTime, endDatetime)\n    axios.post('/api/create-event', {\n      summary,\n      description,\n      location,\n      startDateTime,\n      endDatetime,\n    })\n    .then(response => {\n      console.log(response.data)\n      setSignedIn(true)\n    })\n    .catch(error => console.log(error.message))\n\n  }\n  \n\n  const responseError = error => {\n    console.log(error)\n  }\n\n  const [summary, setSummary] = useState('')\n  const [description, setDescription] = useState('')\n  const [location, setLocation] = useState('')\n  const [startDateTime, setStartDateTime] = useState('')\n  const [endDatetime, setEndDateTime] = useState('')\n  const [signedIn, setSignedIn] = useState(false)\n\n  return (\n      <div>\n        <div className=\"App\">\n          <h1>Add Sessions and Events</h1>\n          </div>\n\n     \n                  <div>\n                  <GoogleLogin \n                      clientId=\"708105023641-t350k3usoo751tfnilu9hrdokjmmli8v.apps.googleusercontent.com\"\n                      buttonText=\"Add sessions and events\"\n                      onSuccess={responseGoogle}\n                      onFailure={responseError}\n                      cookiePolicy={'single_host_origin'}\n    \n                      responseType=\"code\"\n                      accessType=\"offline\"\n                      scope=\"openid email profile https://www.googleapis.com/auth/calendar\"\n                      />\n          </div>\n               \n\n      <div className='form'>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor='summary'>Title</label>\n        <br />\n        <input type='text' id='summary' value={summary} onChange={e => setSummary(e.target.value) } />\n      <br />\n\n      <label htmlFor='description'>Description</label>\n        <br />\n        <textarea id='description' value={description} onChange={e => setDescription (e.target.value)} />\n      <br />\n\n      {/* <label htmlFor='location'>location</label>\n        <br />\n        <input type='text' id='locaion' value={location} onChange={e => setLocation (e.target.value)} />\n      <br /> */}\n\n      <label htmlFor='startDateTime'>Starting at</label>\n        <br />\n        <input type='datetime' id='startdate' value={startDateTime} onChange={e => setStartDateTime} />\n      <br />\n\n      <label htmlFor='endDateTime'>End date</label>\n        <br />\n        <input type='datetime-local' id='enddate' value={endDatetime} onChange={e => setEndDateTime} />\n      <br />\n      <button type='submit'>Create event</button>\n      </form>\n    </div>\n\n  \n</div>\n)\n\n}\n\nexport default Session\n"]},"metadata":{},"sourceType":"module"}