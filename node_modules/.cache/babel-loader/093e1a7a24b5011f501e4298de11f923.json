{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _css from '@emotion/css';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport { jsx } from '@emotion/core';\nvar styles = {\n  breakpoints: {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200\n  },\n  containerMaxWidths: {\n    sm: 540,\n    md: 720,\n    lg: 960,\n    xl: 1140\n  },\n  columns: 12,\n  gutterWidth: 30\n};\n\nvar breakpointNext = function breakpointNext(name, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = styles.breakpoints;\n  }\n\n  var breakpointNames = Object.keys(breakpoints).sort(function (a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n  var n = breakpointNames.indexOf(name);\n\n  if (n < 0) {\n    return new Error(\"breakpoint \" + name + \" not found in \" + breakpointNames);\n  }\n\n  return n < breakpointNames.length - 1 ? breakpointNames[n + 1] : null;\n};\n\nvar breakpointMin = function breakpointMin(name, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = styles.breakpoints;\n  }\n\n  var min = breakpoints[name];\n  return min !== 0 ? min : null;\n};\n\nvar breakpointMax = function breakpointMax(name, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = styles.breakpoints;\n  }\n\n  var next = breakpointNext(name, breakpoints);\n\n  if (next) {\n    return breakpointMin(next, breakpoints) - 0.02;\n  }\n\n  return null;\n};\n\nvar mediaBreakpointUp = function mediaBreakpointUp(name, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = styles.breakpoints;\n  }\n\n  var min = breakpointMin(name, breakpoints);\n\n  if (min) {\n    return \"@media(min-width: \" + min + \"px)\";\n  }\n\n  return '';\n};\n\nvar mediaBreakpointDown = function mediaBreakpointDown(name, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = styles.breakpoints;\n  }\n\n  var max = breakpointMax(name, breakpoints);\n\n  if (max) {\n    return \"@media(max-width: \" + max + \"px)\";\n  }\n\n  return '';\n};\n\nvar mediaBreakpointBetween = function mediaBreakpointBetween(lower, upper, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = styles.breakpoints;\n  }\n\n  var min = breakpointMin(lower, breakpoints);\n  var max = breakpointMax(upper, breakpoints);\n\n  if (min != null && max != null) {\n    return \"@media (min-width: \" + min + \"px) and (max-width: \" + max + \"px)\";\n  } else if (max == null) {\n    return mediaBreakpointUp(lower, breakpoints);\n  } else if (min == null) {\n    return mediaBreakpointDown(upper, breakpoints);\n  }\n};\n\nvar mediaBreakpointOnly = function mediaBreakpointOnly(name, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = styles.breakpoints;\n  }\n\n  var min = breakpointMin(name, breakpoints);\n  var max = breakpointMax(name, breakpoints);\n\n  if (min != null && max != null) {\n    return \"@media (min-width: \" + min + \"px) and (max-width: \" + max + \"px)\";\n  } else if (max == null) {\n    return mediaBreakpointUp(name, breakpoints);\n  } else if (min == null) {\n    return mediaBreakpointDown(name, breakpoints);\n  }\n};\n\nvar makeContainer = function makeContainer(_ref) {\n  var gutterWidth = _ref.gutterWidth;\n  return {\n    boxSizing: 'border-box',\n    width: '100%',\n    paddingRight: gutterWidth / 2,\n    paddingLeft: gutterWidth / 2,\n    marginRight: 'auto',\n    marginLeft: 'auto'\n  };\n};\n\nvar makeContainerMaxWidths = function makeContainerMaxWidths(_ref2) {\n  var maxWidths = _ref2.containerMaxWidths,\n      breakpoints = _ref2.breakpoints;\n  var styles = {};\n  Object.keys(maxWidths).forEach(function (breakpoint) {\n    var maxWidth = maxWidths[breakpoint];\n    var media = mediaBreakpointUp(breakpoint, breakpoints);\n    var mediaStyles = {\n      maxWidth: maxWidth\n    };\n\n    if (media) {\n      var _Object$assign;\n\n      Object.assign(styles, (_Object$assign = {}, _Object$assign[media] = mediaStyles, _Object$assign));\n    } else {\n      Object.assign(styles, mediaStyles);\n    }\n  });\n  return styles;\n};\n\nvar Container = function Container(_ref3) {\n  var children = _ref3.children,\n      styles = _ref3.styles,\n      fluid = _ref3.fluid,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"children\", \"styles\", \"fluid\"]);\n\n  return jsx(\"div\", _extends({}, props, {\n    \"data-eg-container\": \"true\",\n    css: /*#__PURE__*/_css([makeContainer(styles), !fluid && makeContainerMaxWidths(styles)])\n  }), children);\n};\n\nContainer.defaultProps = {\n  styles: styles,\n  fluid: false\n};\n\nvar makeRow = function makeRow(_ref) {\n  var gutterWidth = _ref.gutterWidth;\n  return {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginRight: gutterWidth / -2,\n    marginLeft: gutterWidth / -2\n  };\n};\n\nvar Row = function Row(_ref2) {\n  var styles = _ref2.styles,\n      noGutters = _ref2.noGutters,\n      children = _ref2.children,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"styles\", \"noGutters\", \"children\"]);\n\n  return jsx(\"div\", _extends({}, props, {\n    \"data-eg-row\": \"true\",\n    css: /*#__PURE__*/_css([makeRow(styles), noGutters && rowStyles.noGutters])\n  }), children);\n};\n\nRow.defaultProps = {\n  styles: styles,\n  noGutters: false\n};\nvar rowStyles = {\n  noGutters: {\n    marginRight: 0,\n    marginLeft: 0,\n    '& > [data-eg-col]': {\n      paddingRight: 0,\n      paddingLeft: 0\n    }\n  }\n};\n\nvar percentage = function percentage(x) {\n  return (x * 100).toFixed(6) + \"%\";\n};\n\nvar makeCol = function makeCol(_ref, options) {\n  var gutterWidth = _ref.gutterWidth,\n      columns = _ref.columns,\n      breakpoints = _ref.breakpoints;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var styles = {\n    boxSizing: 'border-box',\n    position: 'relative',\n    width: '100%',\n    paddingRight: gutterWidth / 2,\n    paddingLeft: gutterWidth / 2\n  };\n  Object.keys(breakpoints).forEach(function (breakpoint) {\n    var value = options[breakpoint];\n    var media = mediaBreakpointUp(breakpoint, breakpoints);\n\n    if (value === true) {\n      var mediaStyles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n\n      if (media) {\n        var _Object$assign;\n\n        Object.assign(styles, (_Object$assign = {}, _Object$assign[media] = mediaStyles, _Object$assign));\n      } else {\n        Object.assign(styles, mediaStyles);\n      }\n    } else if (value === 'auto') {\n      var _mediaStyles = {\n        flex: '0 0 auto',\n        width: 'auto',\n        maxWidth: '100%'\n      };\n\n      if (media) {\n        var _Object$assign2;\n\n        Object.assign(styles, (_Object$assign2 = {}, _Object$assign2[media] = _mediaStyles, _Object$assign2));\n      } else {\n        Object.assign(styles, _mediaStyles);\n      }\n    } else if (value !== false && value > 0) {\n      var _mediaStyles2 = {\n        flex: \"0 0 \" + percentage(value / columns),\n        maxWidth: percentage(value / columns)\n      };\n\n      if (media) {\n        var _Object$assign3;\n\n        Object.assign(styles, (_Object$assign3 = {}, _Object$assign3[media] = _mediaStyles2, _Object$assign3));\n      } else {\n        Object.assign(styles, _mediaStyles2);\n      }\n    }\n  });\n  return styles;\n};\n\nvar makeColOffset = function makeColOffset(_ref2, offset) {\n  var breakpoints = _ref2.breakpoints,\n      columns = _ref2.columns;\n  var styles = {};\n  Object.keys(offset).forEach(function (name) {\n    var size = offset[name];\n    var media = mediaBreakpointUp(name, breakpoints);\n    var mediaStyles = {\n      marginLeft: percentage(size / columns)\n    };\n\n    if (media) {\n      var _Object$assign4;\n\n      Object.assign(styles, (_Object$assign4 = {}, _Object$assign4[media] = mediaStyles, _Object$assign4));\n    } else {\n      Object.assign(styles, mediaStyles);\n    }\n  });\n  return styles;\n};\n\nvar makeColOrder = function makeColOrder(_ref3, order) {\n  var breakpoints = _ref3.breakpoints,\n      columns = _ref3.columns;\n  var styles = {};\n  Object.keys(order).forEach(function (name) {\n    var size = order[name];\n    var media = mediaBreakpointUp(name, breakpoints);\n    var mediaStyles = {\n      order: size === 'first' ? -1 : size === 'last' ? columns + 1 : size\n    };\n\n    if (media) {\n      var _Object$assign5;\n\n      Object.assign(styles, (_Object$assign5 = {}, _Object$assign5[media] = mediaStyles, _Object$assign5));\n    } else {\n      Object.assign(styles, mediaStyles);\n    }\n  });\n  return styles;\n};\n\nvar Col = function Col(_ref4) {\n  var styles = _ref4.styles,\n      xs = _ref4.xs,\n      sm = _ref4.sm,\n      md = _ref4.md,\n      lg = _ref4.lg,\n      xl = _ref4.xl,\n      auto = _ref4.auto,\n      offset = _ref4.offset,\n      order = _ref4.order,\n      children = _ref4.children,\n      props = _objectWithoutPropertiesLoose(_ref4, [\"styles\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"auto\", \"offset\", \"order\", \"children\"]);\n\n  if (xs === false && sm === false && md === false && lg === false && xl === false) {\n    xs = true;\n  }\n\n  return jsx(\"div\", _extends({}, props, {\n    \"data-eg-col\": \"true\",\n    css: /*#__PURE__*/_css([makeCol(styles, {\n      xs: xs,\n      sm: sm,\n      md: md,\n      lg: lg,\n      xl: xl,\n      auto: auto\n    }), offset && makeColOffset(styles, offset), order && makeColOrder(styles, order)])\n  }), children);\n};\n\nCol.defaultProps = {\n  styles: styles,\n  auto: false,\n  xs: false,\n  sm: false,\n  md: false,\n  lg: false,\n  xl: false\n};\nexport { Col, Container, Row, breakpointMax, breakpointMin, breakpointNext, mediaBreakpointBetween, mediaBreakpointDown, mediaBreakpointOnly, mediaBreakpointUp };","map":null,"metadata":{},"sourceType":"module"}