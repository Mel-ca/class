{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Session.js\";\nimport React from 'react';\nimport './Session.css';\nimport { GoogleLogin } from 'react-google-login';\n\nfunction Session() {\n  const responseGoogle = response => {\n    console.log(response);\n  };\n\n  const responseError = error => {\n    console.log(error);\n  };\n\n  var gapi = window.gapi;\n  /* \n    Update with your own Client Id and Api key \n  */\n\n  const CLIENT_ID = \"708105023641-t350k3usoo751tfnilu9hrdokjmmli8v.apps.googleusercontent.com\";\n  const API_KEY = \"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\";\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n  const handleClick = () => {\n    gapi.load('client:auth2', () => {\n      console.log('loaded client');\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'));\n      gapi.auth2.getAuthInstance().signIn().then(() => {\n        var event = {\n          'summary': 'Awesome Event!',\n          'location': '800 Howard St., San Francisco, CA 94103',\n          'description': 'Really great refreshments',\n          'start': {\n            'dateTime': '2020-06-28T09:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'end': {\n            'dateTime': '2020-06-28T17:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'recurrence': ['RRULE:FREQ=DAILY;COUNT=2'],\n          'attendees': [{\n            'email': 'lpage@example.com'\n          }, {\n            'email': 'sbrin@example.com'\n          }],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [{\n              'method': 'email',\n              'minutes': 24 * 60\n            }, {\n              'method': 'popup',\n              'minutes': 10\n            }]\n          }\n        };\n        var request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event\n        });\n        request.execute(event => {\n          console.log(event);\n          window.open(event.htmlLink);\n        }); // get events\n\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': new Date().toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items;\n          console.log('EVENTS: ', events);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"googleCalendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Google Calendar Api\")), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"708105023641-t350k3usoo751tfnilu9hrdokjmmli8v.apps.googleusercontent.com\",\n    buttonText: \"Sign in & Authorize calendar\",\n    onSuccess: responseGoogle,\n    onFailure: responseError,\n    cookiePolicy: 'single_host_origin',\n    responseType: \"code\",\n    accessType: \"offline\",\n    scope: \"openid email profile https://www.googleapis.com/auth/calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Session;","map":{"version":3,"sources":["/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Session.js"],"names":["React","GoogleLogin","Session","responseGoogle","response","console","log","responseError","error","gapi","window","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","handleClick","load","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","then","event","request","calendar","events","insert","execute","open","htmlLink","list","Date","toISOString","result","items"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Session.css';\nimport {GoogleLogin} from 'react-google-login';\n\n\nfunction Session() {\n\n  const responseGoogle = response => {\n    console.log(response)\n  }\n\n  const responseError = error => {\n    console.log(error)\n  }\n\n  var gapi = window.gapi\n  /* \n    Update with your own Client Id and Api key \n  */\n  const CLIENT_ID = \"708105023641-t350k3usoo751tfnilu9hrdokjmmli8v.apps.googleusercontent.com\";\n   const API_KEY = \"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\";\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n\n  const handleClick = () => {\n    gapi.load('client:auth2', () => {\n      console.log('loaded client')\n\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\n\n      gapi.auth2.getAuthInstance().signIn()\n      .then(() => {\n        \n        var event = {\n          'summary': 'Awesome Event!',\n          'location': '800 Howard St., San Francisco, CA 94103',\n          'description': 'Really great refreshments',\n          'start': {\n            'dateTime': '2020-06-28T09:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'end': {\n            'dateTime': '2020-06-28T17:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'recurrence': [\n            'RRULE:FREQ=DAILY;COUNT=2'\n          ],\n          'attendees': [\n            {'email': 'lpage@example.com'},\n            {'email': 'sbrin@example.com'}\n          ],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [\n              {'method': 'email', 'minutes': 24 * 60},\n              {'method': 'popup', 'minutes': 10}\n            ]\n          }\n        }\n\n        var request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event,\n        })\n\n        request.execute(event => {\n          console.log(event)\n          window.open(event.htmlLink)\n        })\n        \n\n        // get events\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          console.log('EVENTS: ', events)\n        })\n        \n    \n\n      })\n    })\n  }\n\n  return (\n    <div>\n        <div className='googleCalendar'>\n          <h1>Google Calendar Api</h1>\n        </div>\n        <GoogleLogin clientId='708105023641-t350k3usoo751tfnilu9hrdokjmmli8v.apps.googleusercontent.com' \n          buttonText = 'Sign in & Authorize calendar'\n          onSuccess = {responseGoogle}\n          onFailure = {responseError}\n          cookiePolicy = {'single_host_origin'}\n          responseType = 'code'\n          accessType = 'offline'\n          scope = 'openid email profile https://www.googleapis.com/auth/calendar'\n          />\n\n    </div>\n  );\n}\n\nexport default Session;\n\n"]},"metadata":{},"sourceType":"module"}