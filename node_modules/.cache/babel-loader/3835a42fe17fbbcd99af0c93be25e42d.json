{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// const CLIENT_ID =\n//   \"229181458743-7e5rj587bq9qsjr7e7c5ut4kktgunpgt.apps.googleusercontent.com\";\n// const API_KEY = \"AIzaSyAXTTATGaeYvWKHSiuLd7ucqmHeMxUoX3g\";\n// // Authorization scopes required by the API; multiple scopes can be\n// // included, separated by spaces.\n// const SCOPES =\n//   \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\n// const GoogleCalendar = () => {\n//   const [events, setEvents] = useState(null);\n//   useEffect(() => {\n//     const script = document.createElement(\"script\");\n//     script.async = true;\n//     script.defer = true;\n//     script.src = \"https://apis.google.com/js/api.js\";\n//     document.body.appendChild(script);\n//     script.addEventListener(\"load\", () => {\n//       if (window.gapi) handleClientLoad();\n//     });\n//   }, []);\n//   const openSignInPopup = () => {\n//     window.gapi.auth2.authorize(\n//       { client_id: CLIENT_ID, scope: SCOPES },\n//       (res) => {\n//         console.log(res);\n//         if (res) {\n//           console.log(window.gapi.client, res);\n//           if (res.access_token)\n//             localStorage.setItem(\"access_token\", res.access_token);\n//           // fetch(\n//           //   `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n//           // )\n//           //   .then((res) => res.json())\n//           //   .then((data) =>\n//           //     localStorage.setItem(\"calendarId\", data.items[0].id)\n//           //   );\n//           window.gapi.client.load(\"calendar\", \"v3\", listUpcomingEvents);\n//         }\n//       }\n//     );\n//   };\n//   /**\n//    *  On load, called to load the auth2 library and API client library.\n//    */\n//   const handleClientLoad = () => {\n//     window.gapi.load(\"client:auth2\", initClient);\n//   };\n//   /**\n//    *  Initializes the API client library and sets up sign-in state\n//    *  listeners.\n//    */\n//   const initClient = () => {\n//     if (!localStorage.getItem(\"access_token\")) {\n//       openSignInPopup();\n//     } else {\n//       fetch(\n//         `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n//           },\n//         }\n//       )\n//         .then((res) => {\n//           if (res.status !== 401) {\n//             return res.json();\n//           } else {\n//             localStorage.removeItem(\"access_token\");\n//             openSignInPopup();\n//           }\n//         })\n//         .then((data) => {\n//           if (data?.items) {\n//             console.log(data);\n//             setEvents(formatEvents(data.items));\n//           }\n//         });\n//     }\n//   };\n//   /**\n//    * Print the summary and start datetime/date of the next ten events in\n//    * the authorized user's calendar. If no events are found an\n//    * appropriate message is printed.\n//    */\n//   const listUpcomingEvents = () => {\n//     window.gapi.client.calendar.events\n//       .list({\n//         calendarId: \"primary\",\n//         // timeMin: new Date().toISOString(),\n//         showDeleted: true,\n//         singleEvents: true,\n//         // maxResults: 10,\n//         // orderBy: \"startTime\",\n//       })\n//       .then(function (response) {\n//         var events = response.result.items;\n//         console.log(events);\n//         if (events.length > 0) {\n//           setEvents(formatEvents(events));\n//         }\n//       });\n//   };\n//   const formatEvents = (list) => {\n//     return list.map((item) => ({\n//       title: item.summary,\n//       start: item.start.dateTime || item.start.date,\n//       end: item.end.dateTime || item.end.date,\n//     }));\n//   };\n//   const addEvent = () => {\n//     if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n//       let today = new Date();\n//       fetch(\n//         `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\n//           \"Apr 14, 2021\"\n//         ).toISOString()}&timeMin=${new Date(\"Apr 15, 2021\").toISOString()}`,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n//           },\n//         }\n//       )\n//         .then((res) => res.json())\n//         .then((data) => console.log(data));\n//       //   fetch(\n//       //     `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`,\n//       //     {\n//       //       method: \"POST\",\n//       //       headers: {\n//       //         Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n//       //       },\n//       //       body: JSON.stringify({\n//       //         end: {\n//       //           dateTime: new Date(\"Apr 16, 2021\"),\n//       //         },\n//       //         start: {\n//       //           dateTime: new Date(\"Apr 15, 2021\"),\n//       //         },\n//       //         summary: \"Test\",\n//       //       }),\n//       //     }\n//       //   );\n//     }\n//   };\n//   return (\n//     <>\n//       <button onClick={addEvent}>Add event</button>\n//       <FullCalendar\n//         plugins={[dayGridPlugin]}\n//         initialView=\"dayGridMonth\"\n//         events={events}\n//       />\n//     </>\n//   );\n// };\n// export default GoogleCalendar;","map":{"version":3,"sources":["/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Session.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n\n// const CLIENT_ID =\n//   \"229181458743-7e5rj587bq9qsjr7e7c5ut4kktgunpgt.apps.googleusercontent.com\";\n// const API_KEY = \"AIzaSyAXTTATGaeYvWKHSiuLd7ucqmHeMxUoX3g\";\n\n// // Authorization scopes required by the API; multiple scopes can be\n// // included, separated by spaces.\n// const SCOPES =\n//   \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\n\n// const GoogleCalendar = () => {\n//   const [events, setEvents] = useState(null);\n\n//   useEffect(() => {\n//     const script = document.createElement(\"script\");\n//     script.async = true;\n//     script.defer = true;\n//     script.src = \"https://apis.google.com/js/api.js\";\n\n//     document.body.appendChild(script);\n\n//     script.addEventListener(\"load\", () => {\n//       if (window.gapi) handleClientLoad();\n//     });\n//   }, []);\n\n//   const openSignInPopup = () => {\n//     window.gapi.auth2.authorize(\n//       { client_id: CLIENT_ID, scope: SCOPES },\n//       (res) => {\n//         console.log(res);\n//         if (res) {\n//           console.log(window.gapi.client, res);\n\n//           if (res.access_token)\n//             localStorage.setItem(\"access_token\", res.access_token);\n\n//           // fetch(\n//           //   `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${res.access_token}`\n//           // )\n//           //   .then((res) => res.json())\n//           //   .then((data) =>\n//           //     localStorage.setItem(\"calendarId\", data.items[0].id)\n//           //   );\n\n//           window.gapi.client.load(\"calendar\", \"v3\", listUpcomingEvents);\n//         }\n//       }\n//     );\n//   };\n\n//   /**\n//    *  On load, called to load the auth2 library and API client library.\n//    */\n//   const handleClientLoad = () => {\n//     window.gapi.load(\"client:auth2\", initClient);\n//   };\n\n//   /**\n//    *  Initializes the API client library and sets up sign-in state\n//    *  listeners.\n//    */\n//   const initClient = () => {\n//     if (!localStorage.getItem(\"access_token\")) {\n//       openSignInPopup();\n//     } else {\n//       fetch(\n//         `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&orderBy=startTime&singleEvents=true`,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n//           },\n//         }\n//       )\n//         .then((res) => {\n//           if (res.status !== 401) {\n//             return res.json();\n//           } else {\n//             localStorage.removeItem(\"access_token\");\n\n//             openSignInPopup();\n//           }\n//         })\n//         .then((data) => {\n//           if (data?.items) {\n//             console.log(data);\n//             setEvents(formatEvents(data.items));\n//           }\n//         });\n//     }\n//   };\n\n//   /**\n//    * Print the summary and start datetime/date of the next ten events in\n//    * the authorized user's calendar. If no events are found an\n//    * appropriate message is printed.\n//    */\n//   const listUpcomingEvents = () => {\n//     window.gapi.client.calendar.events\n//       .list({\n//         calendarId: \"primary\",\n//         // timeMin: new Date().toISOString(),\n//         showDeleted: true,\n//         singleEvents: true,\n//         // maxResults: 10,\n//         // orderBy: \"startTime\",\n//       })\n//       .then(function (response) {\n//         var events = response.result.items;\n\n//         console.log(events);\n\n//         if (events.length > 0) {\n//           setEvents(formatEvents(events));\n//         }\n//       });\n//   };\n\n//   const formatEvents = (list) => {\n//     return list.map((item) => ({\n//       title: item.summary,\n//       start: item.start.dateTime || item.start.date,\n//       end: item.end.dateTime || item.end.date,\n//     }));\n//   };\n\n//   const addEvent = () => {\n//     if (window.gapi.client || localStorage.getItem(\"access_token\")) {\n//       let today = new Date();\n\n//       fetch(\n//         `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}&timeMax=${new Date(\n//           \"Apr 14, 2021\"\n//         ).toISOString()}&timeMin=${new Date(\"Apr 15, 2021\").toISOString()}`,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n//           },\n//         }\n//       )\n//         .then((res) => res.json())\n//         .then((data) => console.log(data));\n//       //   fetch(\n//       //     `https://www.googleapis.com/calendar/v3/calendars/primary/events?key=${API_KEY}`,\n//       //     {\n//       //       method: \"POST\",\n//       //       headers: {\n//       //         Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n//       //       },\n//       //       body: JSON.stringify({\n//       //         end: {\n//       //           dateTime: new Date(\"Apr 16, 2021\"),\n//       //         },\n//       //         start: {\n//       //           dateTime: new Date(\"Apr 15, 2021\"),\n//       //         },\n//       //         summary: \"Test\",\n//       //       }),\n//       //     }\n//       //   );\n//     }\n//   };\n\n//   return (\n//     <>\n//       <button onClick={addEvent}>Add event</button>\n//       <FullCalendar\n//         plugins={[dayGridPlugin]}\n//         initialView=\"dayGridMonth\"\n//         events={events}\n//       />\n//     </>\n//   );\n// };\n\n// export default GoogleCalendar;"]},"metadata":{},"sourceType":"module"}