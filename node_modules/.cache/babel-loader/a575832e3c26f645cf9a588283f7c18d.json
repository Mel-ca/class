{"ast":null,"code":"var _jsxFileName = \"/home/moringa/React/New/Class-Schedule-React/src/components/pages/Sesion.js\";\nimport React from 'react';\n\nconst Sesion = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [sessionId, setSessionId] = useState(null);\n  const [sessions, setSessions] = useState([]);\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  console.log(auth);\n  useEffect(() => {\n    refreshSessions();\n  }, []);\n\n  const refreshSessions = () => {\n    API.get(\"/\").then(res => {\n      setSessions(res.data);\n    }).catch(console.error);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // e.target.reset();\n\n    let item = {\n      title,\n      description,\n      date,\n      time,\n      link\n    };\n    API.post(\"/\", item).then(() => refreshSessions());\n    setTitle(\"\");\n    setDescription(\"\");\n    setDate(\"\");\n    setTime(\"\");\n    setLink(\"\");\n  };\n\n  const onUpdate = id => {\n    let item = {\n      title,\n      description,\n      date,\n      time,\n      link\n    };\n    API.patch(`/${id}/`, item).then(res => refreshSessions());\n    setTitle(\"\");\n    setDescription(\"\");\n    setDate(\"\");\n    setTime(\"\");\n    setLink(\"\");\n  };\n\n  const onDelete = id => {\n    API.delete(`/${id}/`).then(res => refreshSessions());\n  };\n\n  function selectSession(id) {\n    let item = sessions.filter(session => session.id === id)[0];\n    setTitle(item.title);\n    setDescription(item.description);\n    setDate(item.date);\n    setTime(item.time);\n    setLink(item.link);\n    setSessionId(item.id);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Sesion;","map":{"version":3,"sources":["/home/moringa/React/New/Class-Schedule-React/src/components/pages/Sesion.js"],"names":["React","Sesion","title","setTitle","useState","description","setDescription","date","setDate","time","setTime","link","setLink","sessionId","setSessionId","sessions","setSessions","auth","useSelector","state","dispatch","useDispatch","console","log","useEffect","refreshSessions","API","get","then","res","data","catch","error","onSubmit","e","preventDefault","item","post","onUpdate","id","patch","onDelete","delete","selectSession","filter","session"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst Sesion = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\")\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n\n  const [sessionId, setSessionId] = useState(null);\n  const [sessions, setSessions] = useState([]);\n\n  const auth= useSelector((state) => state.auth)\n  const dispatch=useDispatch()\n  console.log(auth);\n\n  useEffect(() => {\n    refreshSessions();\n  }, []);\n\n  const refreshSessions = () => {\n    API.get(\"/\")\n      .then((res) => {\n        setSessions(res.data);\n      })\n      .catch(console.error);\n  };\n  \n  const onSubmit = (e) => {\n    e.preventDefault();\n    // e.target.reset();\n    let item = { title, description, date, time, link };\n    API.post(\"/\", item).then(() => refreshSessions());\n    setTitle(\"\")\n    setDescription(\"\")\n    setDate(\"\")\n    setTime(\"\")\n    setLink(\"\")\n  };\n\n  const onUpdate = (id) => {\n    let item = { title, description, date, time, link };\n    API.patch(`/${id}/`, item).then((res) => refreshSessions());\n    setTitle(\"\")\n    setDescription(\"\")\n    setDate(\"\")\n    setTime(\"\")\n    setLink(\"\")\n  }\n  const onDelete = (id) => {\n    API.delete(`/${id}/`).then((res) => refreshSessions());\n  };\n  function selectSession(id) {\n    let item = sessions.filter((session) => session.id === id)[0];\n    setTitle(item.title);\n    setDescription(item.description);\n    setDate(item.date);\n    setTime(item.time);\n    setLink(item.link);\n    setSessionId(item.id);\n  }\n\n  return (\n    <div className=\"container mt-4\">\n\n\n   \n    </div>\n  )\n}\n\nexport default Sesion"]},"metadata":{},"sourceType":"module"}