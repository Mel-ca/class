{"ast":null,"code":"import axios from \"axios\";\nimport { STUDENT_USER_LOADED, STUDENT_USER_FAILED, TM_USER_LOADED, TM_USER_FAILED, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_SUCCESS, REGISTER_FUSER_SUCCESS, REGISTER_FUSER_FAILED, REGISTER_CUSER_SUCCESS, REGISTER_CUSER_FAILED } from \"../actions/type\";\nexport const getStudentUser = () => (dispatch, getState) => {\n  const token = getState().auth.token;\n  const is_student = getState().auth.isStudent;\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  if (token && is_student) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  axios.get('https://neapi.herokuapp.com/api/student/dashboard/', config).then(res => {\n    dispatch({\n      type: STUDENT_USER_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: STUDENT_USER_FAILED\n    });\n  });\n};\nexport const getTmUser = () => (dispatch, getState) => {\n  const token = getState().auth.token;\n  const is_student = getState().auth.isStudent;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (token && !is_student) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  axios.get('https://neapi.herokuapp.com/api/tm/dashboard/', config).then(res => {\n    dispatch({\n      type: TM_USER_LOADED,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: TM_USER_FAILED\n    });\n  });\n};\nexport const create_studentuser = _ref => {\n  let {\n    username,\n    email,\n    password,\n    password2\n  } = _ref;\n  return dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      username,\n      email,\n      password,\n      password2\n    });\n    axios.post('https://neapi.herokuapp.com/api/student/tm/', body, config).then(res => {\n      dispatch({\n        type: REGISTER_CUSER_SUCCESS,\n        payload: res.data\n      });\n      console.log(res.data);\n    }).catch(err => {\n      dispatch({\n        type: REGISTER_CUSER_FAILED\n      });\n      console.log(err.response.data);\n    });\n  };\n};\nexport const create_tmuser = _ref2 => {\n  let {\n    username,\n    email,\n    password,\n    password2\n  } = _ref2;\n  return dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      username,\n      email,\n      password,\n      password2\n    });\n    axios.post('https://neapi.herokuapp.com/api/signup/tm/', body, config).then(res => {\n      dispatch({\n        type: REGISTER_FUSER_SUCCESS,\n        payload: res.data\n      });\n      console.log(res.data);\n    }).catch(err => {\n      dispatch({\n        type: REGISTER_FUSER_FAILED\n      });\n      console.log(err.response.data);\n    });\n  };\n};\nexport const login = _ref3 => {\n  let {\n    username,\n    password\n  } = _ref3;\n  return dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      username,\n      password\n    }); // axios.post('https://class-schedule-app00.herokuapp.com/login/', body, config)\n\n    axios.post('https://neapi.herokuapp.com/api/login/', body, config).then(response => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: LOGIN_FAILED\n      });\n    });\n  };\n};\nexport const logout = () => (dispatch, getState) => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  axios.post('https://neapi.herokuapp.com/api/logout/tm/', null, config).then(res => {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  }).catch(err => {\n    console.log(err.response.data);\n  });\n};","map":{"version":3,"sources":["/home/moringa/Desktop/react/Class-Schedule-React/src/actions/auth.js"],"names":["axios","STUDENT_USER_LOADED","STUDENT_USER_FAILED","TM_USER_LOADED","TM_USER_FAILED","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_SUCCESS","REGISTER_FUSER_SUCCESS","REGISTER_FUSER_FAILED","REGISTER_CUSER_SUCCESS","REGISTER_CUSER_FAILED","getStudentUser","dispatch","getState","token","auth","is_student","isStudent","config","headers","get","then","res","type","payload","data","catch","err","getTmUser","create_studentuser","username","email","password","password2","body","JSON","stringify","post","console","log","response","create_tmuser","login","logout"],"mappings":"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","sourcesContent":["\n  \nimport axios from \"axios\";\nimport { STUDENT_USER_LOADED, STUDENT_USER_FAILED, TM_USER_LOADED,\n    TM_USER_FAILED, LOGIN_SUCCESS, LOGIN_FAILED,LOGOUT_SUCCESS, REGISTER_FUSER_SUCCESS,\n    REGISTER_FUSER_FAILED, REGISTER_CUSER_SUCCESS, REGISTER_CUSER_FAILED\n} from \"../actions/type\"\n\n\nexport const getStudentUser=()=>(dispatch, getState)=>{\n    const token=getState().auth.token\n    const is_student=getState().auth.isStudent\n    const config={\n        headers:{\n            'Content-type':'application/json'\n        }\n    }\n\n    if(token && is_student){\n        config.headers['Authorization']=`Token ${token}`  \n    }\n    axios.get('https://neapi.herokuapp.com/api/student/dashboard/', config)\n    .then(res =>{\n        dispatch({\n            type:STUDENT_USER_LOADED,\n            payload:res.data\n        })\n    }).catch(err =>{\n        dispatch({\n            type:STUDENT_USER_FAILED\n        })\n    })\n}\n\n\n\nexport const getTmUser = ()=>(dispatch, getState)=>{\n    const token=getState().auth.token;\n    const is_student=getState().auth.isStudent\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n\n    if(token && !is_student){\n        config.headers['Authorization']=`Token ${token}`\n    }\n\n    axios.get('https://neapi.herokuapp.com/api/tm/dashboard/', config)\n      .then(res =>{\n          dispatch({\n              type:TM_USER_LOADED,\n              payload:res.data\n          })\n      }).catch(err => {\n          dispatch({\n              type:TM_USER_FAILED\n          })\n      })\n}\n        \n\nexport const create_studentuser=({username, email,password, password2})=>(dispatch)=>{\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n    const body=JSON.stringify({username, email, password, password2})\n\n    axios.post('https://neapi.herokuapp.com/api/student/tm/', body, config)\n    .then(res =>{\n        dispatch({\n            type:REGISTER_CUSER_SUCCESS,\n            payload:res.data\n        })\n        console.log(res.data)\n    }).catch(err =>{\n        dispatch({\n            type:REGISTER_CUSER_FAILED\n        })\n        console.log(err.response.data)\n    })\n\n    \n}\n\n\nexport const create_tmuser=({username, email,password, password2})=>(dispatch)=>{\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n    const body=JSON.stringify({username, email, password, password2})\n\n    axios.post('https://neapi.herokuapp.com/api/signup/tm/', body, config)\n    .then(res =>{\n        dispatch({\n            type:REGISTER_FUSER_SUCCESS,\n            payload:res.data\n        })\n        console.log(res.data)\n    }).catch(err =>{\n        dispatch({\n            type:REGISTER_FUSER_FAILED\n        })\n        console.log(err.response.data)\n    })\n\n    \n}\n\n\nexport const login=({username, password})=>(dispatch)=>{\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n    const body=JSON.stringify({username, password})\n    // axios.post('https://class-schedule-app00.herokuapp.com/login/', body, config)\n\n    axios.post('https://neapi.herokuapp.com/api/login/', body, config)\n    .then(response =>{\n        dispatch({\n            type:LOGIN_SUCCESS,\n            payload:response.data\n        })\n    }).catch(err =>{\n        dispatch({\n            type:LOGIN_FAILED\n        })\n    })\n\n}\n\n\nexport const logout=()=>(dispatch, getState)=>{\n    const token=getState().auth.token\n    const config={\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n\n    if(token){\n        config.headers['Authorization']= `Token ${token}`\n    }\n    axios.post('https://neapi.herokuapp.com/api/logout/tm/', null, config)\n    .then(res =>{\n        dispatch({\n            type:LOGOUT_SUCCESS\n        })\n    }).catch(err =>{\n        console.log(err.response.data)\n    })\n}"]},"metadata":{},"sourceType":"module"}