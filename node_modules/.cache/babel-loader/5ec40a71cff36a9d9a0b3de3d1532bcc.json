{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/Class-Schedule-React/src/components/pages/Sesion.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, Card } from \"react-bootstrap\";\nimport API from \"./APL\";\nimport './session.css';\nimport { Modal } from 'react-bootstrap';\nimport moment from 'moment';\n\nconst Sesion = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [sessionId, setSessionId] = useState(null);\n  const [sessions, setSessions] = useState([]);\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  console.log(auth);\n  useEffect(() => {\n    refreshSessions();\n  }, []);\n\n  const refreshSessions = () => {\n    API.get(\"/\").then(res => {\n      setSessions(res.data);\n    }).catch(console.error);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // e.target.reset();\n\n    let item = {\n      title,\n      description,\n      date,\n      time,\n      link\n    };\n    API.post(\"/\", item).then(() => refreshSessions());\n    setTitle(\"\");\n    setDescription(\"\");\n    setDate(\"\");\n    setTime(\"\");\n    setLink(\"\");\n  };\n\n  const onUpdate = id => {\n    let item = {\n      title,\n      description,\n      date,\n      time,\n      link\n    };\n    API.patch(`/${id}/`, item).then(res => refreshSessions());\n    setTitle(\"\");\n    setDescription(\"\");\n    setDate(\"\");\n    setTime(\"\");\n    setLink(\"\");\n  };\n\n  const onDelete = id => {\n    API.delete(`/${id}/`).then(res => refreshSessions());\n  };\n\n  function selectSession(id) {\n    let item = sessions.filter(session => session.id === id)[0];\n    setTitle(item.title);\n    setDescription(item.description);\n    setDate(item.date);\n    setTime(item.time);\n    setLink(item.link);\n    setSessionId(item.id);\n  }\n\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, auth.isStudent ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: showModal,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \" Add a New Session\"), /*#__PURE__*/React.createElement(Modal, {\n    show: isOpen,\n    onHide: hideModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }\n  }, \"New Session \"))), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, sessionId, \"Session Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter The Title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicDetscription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Session Details\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    type: \"textarea\",\n    placeholder: \"Enter Session Details\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \" Select Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    placeholder: \"Date\",\n    value: date,\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \" Session Time\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"time\",\n    placeholder: \"Time\",\n    value: time,\n    onChange: e => setTime(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \" Session Link\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Time\",\n    value: link,\n    onChange: e => setLink(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: onSubmit,\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"button\",\n    onClick: () => onUpdate(sessionId),\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    type: \"button\",\n    onClick: hideModal,\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Close\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"float-left mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Available Sessions \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, sessions.map((session, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"text-center card m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, session.title), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 23\n      }\n    }, \"Session Details\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, \" \", session.description, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }, \"Date\"), session.date, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      key: d,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }, \"Posted On: \", moment(item.date_created).utc().format('YYYY-MM-DD')), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 23\n      }\n    }, moment(session.date_created).utc().format('YYYY-MM-DD')), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn btn-primary\",\n      href: \"{session.link}\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }\n    }, \"Join Session\")), /*#__PURE__*/React.createElement(Card.Footer, {\n      className: \"bg-default \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, auth.isStudent ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      type: \"button\",\n      onClick: () => selectSession(session.id),\n      className: \"mx-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      type: \"button\",\n      onClick: () => onDelete(session.id),\n      className: \"mx-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, \"Delete\"))))));\n  }))))));\n};\n\nexport default Sesion;","map":{"version":3,"sources":["/home/moringa/Documents/Class-Schedule-React/src/components/pages/Sesion.js"],"names":["React","useState","useEffect","FontAwesomeIcon","useSelector","useDispatch","Button","Form","Card","API","Modal","moment","Sesion","title","setTitle","description","setDescription","date","setDate","time","setTime","link","setLink","sessionId","setSessionId","sessions","setSessions","auth","state","dispatch","console","log","refreshSessions","get","then","res","data","catch","error","onSubmit","e","preventDefault","item","post","onUpdate","id","patch","onDelete","delete","selectSession","filter","session","isOpen","setIsOpen","showModal","hideModal","isStudent","target","value","map","index","d","date_created","utc","format"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {useSelector, useDispatch} from 'react-redux';\nimport { Button, Form , Card} from \"react-bootstrap\";\nimport API from \"./APL\";\nimport './session.css';\nimport {  Modal } from 'react-bootstrap';\nimport moment from 'moment';\n\n\nconst Sesion = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\")\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n\n  const [sessionId, setSessionId] = useState(null);\n  const [sessions, setSessions] = useState([]);\n\n  const auth= useSelector((state) => state.auth)\n  const dispatch=useDispatch()\n  console.log(auth);\n\n  useEffect(() => {\n    refreshSessions();\n  }, []);\n\n  const refreshSessions = () => {\n    API.get(\"/\")\n      .then((res) => {\n        setSessions(res.data);\n      })\n      .catch(console.error);\n  };\n  \n  const onSubmit = (e) => {\n    e.preventDefault();\n    // e.target.reset();\n    let item = { title, description, date, time, link };\n    API.post(\"/\", item).then(() => refreshSessions());\n    setTitle(\"\")\n    setDescription(\"\")\n    setDate(\"\")\n    setTime(\"\")\n    setLink(\"\")\n  };\n\n  const onUpdate = (id) => {\n    let item = { title, description, date, time, link };\n    API.patch(`/${id}/`, item).then((res) => refreshSessions());\n    setTitle(\"\")\n    setDescription(\"\")\n    setDate(\"\")\n    setTime(\"\")\n    setLink(\"\")\n  }\n  const onDelete = (id) => {\n    API.delete(`/${id}/`).then((res) => refreshSessions());\n  };\n  function selectSession(id) {\n    let item = sessions.filter((session) => session.id === id)[0];\n    setTitle(item.title);\n    setDescription(item.description);\n    setDate(item.date);\n    setTime(item.time);\n    setLink(item.link);\n    setSessionId(item.id);\n  }\n  const [isOpen, setIsOpen] = React.useState(false);\n  const showModal = () => {\n    setIsOpen(true);\n  };\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n\n  return (\n    <div>\n        <div className=\"container mt-5\">\n      <div className=\"row\">\n      {auth.isStudent ? null:<>\n        <div className=\"col-md-4 mt-5\">\n        \n        <Button onClick={showModal} className='btn btn-primary'> Add a New Session</Button>\n        <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <Modal.Title><h1>New Session </h1></Modal.Title>\n        </Modal.Header>\n          <Form onSubmit={onSubmit} className=\"mt-4\">\n            <Form.Group className=\"mb-3\" controlId=\"formBasicTitle\">\n              <Form.Label>{sessionId}Session Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter The Title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicDetscription\">\n              <Form.Label>Session Details</Form.Label>\n              <Form.Control as=\"textarea\" rows={3}\n                type=\"textarea\"\n                placeholder=\"Enter Session Details\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicDate\">\n              <Form.Label> Select Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"Date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicTime\">\n              <Form.Label> Session Time</Form.Label>\n              <Form.Control\n                type=\"time\"\n                placeholder=\"Time\"\n                value={time}\n                onChange={(e) => setTime(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicLink\">\n              <Form.Label> Session Link</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Time\"\n                value={link}\n                onChange={(e) => setLink(e.target.value)}\n              />\n            </Form.Group>\n\n            <div className=\"float-right\">\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={onSubmit}\n                className=\"mx-2\"\n              >\n                Save\n              </Button>\n              <Button\n                variant=\"primary\"\n                type=\"button\"\n                onClick={() => onUpdate(sessionId)}\n                className=\"mx-2\"\n              >\n                Update\n              </Button>\n              <Button\n                variant=\"danger\"\n                type=\"button\"\n                onClick={hideModal}\n                className=\"mx-2\"\n              >\n                Close\n              </Button>\n            </div>\n          </Form>\n          </Modal>\n\n        </div>\n        </>}\n        <div className=\"col-md-8 mt-5\">\n          <h3 className=\"float-left mt-4\">Available Sessions </h3>\n          <div className=\"row\">\n          {/* <table class=\"table mt-4\">\n            <thead>\n              <tr>\n                <th scope=\"col\"></th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Session Details</th>\n                <th scope=\"col\">Session Date</th>\n                <th scope=\"col\">Time</th>\n                <th scope=\"col\">Session Link</th>\n              </tr>\n            </thead>\n            <tbody> */}\n              {sessions.map((session, index) => {\n                \n                return (\n\n                  \n                  <>\n                  {/* <tr key=\"\">\n                    <th scope=\"row\">{session.id}</th>\n                    <td> {session.title}</td>\n                    <td>{session.description}</td>\n                    <td>{session.date}</td>\n                    <td>{session.time}</td>\n                    <td>{session.link}</td>\n\n\n\n\n\n\n\n                    <td>\n                      {auth.isStudent ? null : <>\n                        <Button\n                          variant=\"secondary\"\n                          type=\"button\"\n                          onClick={() => selectSession(session.id)}\n                          className=\"mx-2\"\n                        >\n                          Edit\n                        </Button>\n                        <Button\n                          variant=\"danger\"\n                          type=\"button\"\n                          onClick={() => onDelete(session.id)}\n                          className=\"mx-2\"\n                        >\n                          Delete\n                        </Button>\n                      </>}\n\n                    </td>\n                  </tr> */}\n                  <div className=\"col-md-6 mt-3\">\n                  <Card className=\"text-center card m-2\">\n                    <Card.Header>{session.title}</Card.Header>\n                    <Card.Body>\n                      <Card.Title>Session Details</Card.Title>\n                      <Card.Text> {session.description} </Card.Text><br/>\n                      <h4>Date</h4>\n                      {session.date} <br/>\n                      <h4>Time</h4>\n                      <Card.Subtitle className=\"mb-2 text-muted\"key={d}>Posted On: {moment(item.date_created).utc().format('YYYY-MM-DD')}</Card.Subtitle>\n\n                      <Card.Text>{moment(session.date_created).utc().format('YYYY-MM-DD')}</Card.Text>\n                      <a className=\"btn btn-primary\" href=\"{session.link}\">Join Session</a>\n                      {/* <Button variant=\"primary\">Go somewhere</Button> */}\n                    </Card.Body>\n                    <Card.Footer className=\"bg-default \">\n                    {auth.isStudent ? null : <>\n                        <Button\n                          variant=\"secondary\"\n                          type=\"button\"\n                          onClick={() => selectSession(session.id)}\n                          className=\"mx-2\"\n                        >\n                          Edit\n                        </Button>\n                        <Button\n                          variant=\"danger\"\n                          type=\"button\"\n                          onClick={() => onDelete(session.id)}\n                          className=\"mx-2\"\n                        >\n                          Delete\n                        </Button>\n                      </>}\n                    </Card.Footer>\n                  </Card>\n                  </div>\n                    </>\n                );\n                \n              })}\n            {/* </tbody>\n          </table> */}\n        </div>\n      </div>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default Sesion"]},"metadata":{},"sourceType":"module"}