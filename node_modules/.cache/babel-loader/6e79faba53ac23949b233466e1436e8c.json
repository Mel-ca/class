{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Session.js\";\nimport React from 'react';\nimport './Session.css';\n\nfunction Session() {\n  var gapi = window.gapi;\n  /* \n    Update with your own Client Id and Api key \n  */\n\n  var CLIENT_ID = \"c_e6prcaebp8jk5f4ntaaujcthps@group.calendar.google.com\";\n  var API_KEY = \"AIzaSyD6WzU0T9urdXi7JqIKUddDVcx7cYzjDgM\";\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n  const handleClick = () => {\n    gapi.load('client:auth2', () => {\n      console.log('loaded client');\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'));\n      gapi.auth2.getAuthInstance().signIn().then(() => {\n        var event = {\n          'summary': 'Awesome Event!',\n          'location': '800 Howard St., San Francisco, CA 94103',\n          'description': 'Really great refreshments',\n          'start': {\n            'dateTime': '2020-06-28T09:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'end': {\n            'dateTime': '2020-06-28T17:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'recurrence': ['RRULE:FREQ=DAILY;COUNT=2'],\n          'attendees': [{\n            'email': 'lpage@example.com'\n          }, {\n            'email': 'sbrin@example.com'\n          }],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [{\n              'method': 'email',\n              'minutes': 24 * 60\n            }, {\n              'method': 'popup',\n              'minutes': 10\n            }]\n          }\n        };\n        var request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event\n        });\n        request.execute(event => {\n          console.log(event);\n          window.open(event.htmlLink);\n        }); // get events\n\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': new Date().toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items;\n          console.log('EVENTS: ', events);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Click to add event to Google Calendar\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-session\",\n    style: {\n      width: 200,\n      height: 55,\n      borderRadius: \"30px\",\n      marginLeft: \"20%\",\n      outline: \"none\",\n      border: \"none\",\n      cursor: \"pointer\",\n      background: \"#18183d\",\n      color: \"#fff\"\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Add Sessions and events\")));\n}\n\nexport default Session;","map":{"version":3,"sources":["/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Session.js"],"names":["React","Session","gapi","window","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","handleClick","load","console","log","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","then","event","request","calendar","events","insert","execute","open","htmlLink","list","Date","toISOString","response","result","items","width","height","borderRadius","marginLeft","outline","border","cursor","background","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Session.css';\n\n\nfunction Session() {\n\n  var gapi = window.gapi\n  /* \n    Update with your own Client Id and Api key \n  */\n  var CLIENT_ID = \"c_e6prcaebp8jk5f4ntaaujcthps@group.calendar.google.com\"\n  var API_KEY = \"AIzaSyD6WzU0T9urdXi7JqIKUddDVcx7cYzjDgM\"\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n\n  const handleClick = () => {\n    gapi.load('client:auth2', () => {\n      console.log('loaded client')\n\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n\n      gapi.client.load('calendar', 'v3', () => console.log('bam!'))\n\n      gapi.auth2.getAuthInstance().signIn()\n      .then(() => {\n        \n        var event = {\n          'summary': 'Awesome Event!',\n          'location': '800 Howard St., San Francisco, CA 94103',\n          'description': 'Really great refreshments',\n          'start': {\n            'dateTime': '2020-06-28T09:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'end': {\n            'dateTime': '2020-06-28T17:00:00-07:00',\n            'timeZone': 'America/Los_Angeles'\n          },\n          'recurrence': [\n            'RRULE:FREQ=DAILY;COUNT=2'\n          ],\n          'attendees': [\n            {'email': 'lpage@example.com'},\n            {'email': 'sbrin@example.com'}\n          ],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [\n              {'method': 'email', 'minutes': 24 * 60},\n              {'method': 'popup', 'minutes': 10}\n            ]\n          }\n        }\n\n        var request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event,\n        })\n\n        request.execute(event => {\n          console.log(event)\n          window.open(event.htmlLink)\n        })\n        \n\n        // get events\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          console.log('EVENTS: ', events)\n        })\n        \n    \n\n      })\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Click to add event to Google Calendar</p>\n        <button className='btn-session' style={{width: 200, height: 55, borderRadius: \"30px\", marginLeft: \"20%\", outline: \"none\", border: \"none\", cursor: \"pointer\", background: \"#18183d\", color: \"#fff\"}} onClick={handleClick}>Add Sessions and events</button>\n      </header>\n    </div>\n  );\n}\n\nexport default Session;"]},"metadata":{},"sourceType":"module"}