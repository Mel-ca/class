{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Announcement.js\";\nimport React, { useState } from 'react';\nimport { Container, Modal } from 'react-bootstrap';\nimport './Announcement.css';\nimport { Row, Col } from 'react-grid';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\n\nconst List = props => {\n  const [comment, setComment] = useState(\"\");\n  const [date_posted, setDate] = useState(\"\");\n  const [announcement, setAnnouncement] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"https://class-schedule-app00.herokuapp.com/announcement/\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          announcement: announcement,\n          comment: comment,\n          date_posed: date_posted\n        })\n      });\n      let resJson = await res.json();\n\n      if (res.status === 200) {\n        setName(\"\");\n        setComment(\"\");\n        setMessage(\"Your comment has been received!\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  const {\n    announcements\n  } = props;\n  if (!announcements || announcements.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, \"No Announcements, sorry\");\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"list-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \"Available Announcements\"), announcements.map(announcements => {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '13rem',\n        borderRadius: '15px',\n        backgroundColor: \"#E1E4F2\"\n      },\n      key: announcements.id,\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"repo-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, announcements.title), /*#__PURE__*/React.createElement(Card.Text, {\n      className: \"repo-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, announcements.message), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, \"Posted by: \", announcements.user), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, \"Posted On: \", announcements.date_created), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, \"Updated On: \", announcements.date_updated), /*#__PURE__*/React.createElement(\"style\", {\n      type: \"text/css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }\n    }, `\n    .btn-flat {\n      background-color: #18183D;\n      color: white;\n    }\n    .btn-sm {\n      padding: 1rem 1.5rem;\n      font-size: 1.5rem;\n    }\n    `), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      onClick: showModal,\n      variant: \"flat\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Modal, {\n      show: isOpen,\n      onHide: hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Comment\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: name,\n      placeholder: \"Name\",\n      onChange: e => setName(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: comment,\n      placeholder: \"Comment\",\n      onChange: e => setComment(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"flat\",\n      size: \"sm\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, message ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 45\n      }\n    }, message) : null)))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"flat\",\n      size: \"sm\",\n      onClick: hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \"Close\"))))))));\n  }));\n};\n\nexport default List;","map":{"version":3,"sources":["/home/moringa/Desktop/react/Class-Schedule-React/src/components/pages/Announcement.js"],"names":["React","useState","Container","Modal","Row","Col","Button","Card","List","props","comment","setComment","date_posted","setDate","announcement","setAnnouncement","name","setName","message","setMessage","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","date_posed","resJson","json","status","err","console","log","isOpen","setIsOpen","showModal","hideModal","announcements","length","map","width","borderRadius","backgroundColor","id","title","user","date_created","date_updated","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Modal } from 'react-bootstrap';\nimport './Announcement.css';\nimport {  Row, Col } from 'react-grid';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card'  \n\n\n\n\nconst List = (props) => {\n  const [comment, setComment] = useState(\"\");\n  const [date_posted, setDate] = useState(\"\");\n  const [announcement, setAnnouncement] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"https://class-schedule-app00.herokuapp.com/announcement/\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          announcement: announcement,\n          comment: comment,\n          date_posed: date_posted,\n        }),\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setName(\"\");\n        setComment(\"\");\n\n        setMessage(\"Your comment has been received!\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n  const { announcements } = props;\n  if (!announcements || announcements.length === 0)\n  return <p>No Announcements, sorry</p>;\n\n \n  return (\n    <Container fluid>\n    <h2 className='list-head'>Available Announcements</h2>\n      {announcements.map((announcements) => {\n        return (\n  <Row>\n   <Col>\n    <Card style={{ width: '13rem',borderRadius: '15px', backgroundColor: \"#E1E4F2\"}} key={announcements.id} className='list'>\n    <Card.Body className=\"test\">\n    <Card.Title  className='repo-text'>{announcements.title}</Card.Title>\n    <Card.Text className='repo-description'>{announcements.message}\n    </Card.Text>        \n    <Card.Subtitle className=\"mb-2 text-muted\">Posted by: {announcements.user}</Card.Subtitle>\n    <Card.Subtitle className=\"mb-2 text-muted\">Posted On: {announcements.date_created}</Card.Subtitle>\n    <Card.Subtitle className=\"mb-2 text-muted\">Updated On: {announcements.date_updated}</Card.Subtitle>\n\n    \n  <style type=\"text/css\">\n    {`\n    .btn-flat {\n      background-color: #18183D;\n      color: white;\n    }\n    .btn-sm {\n      padding: 1rem 1.5rem;\n      font-size: 1.5rem;\n    }\n    `}\n  </style>\n\n \n  <>\n      <Button onClick={showModal} variant=\"flat\" size=\"sm\">\n    Comment\n  </Button>\n      <Modal show={isOpen} onHide={hideModal}>\n        <Modal.Header>\n          <Modal.Title>Comment</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={name}\n          placeholder=\"Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n       \n       <input\n          type=\"text\"\n          value={comment}\n          placeholder=\"Comment\"\n          onChange={(e) => setComment(e.target.value)}\n        />\n\n        <Button variant=\"flat\" size=\"sm\" type=\"submit\">Submit</Button>\n\n        <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n      </form>\n    </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"flat\" size=\"sm\" onClick={hideModal}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n\n\n\n \n</Card.Body>\n    </Card>\n    </Col>\n    </Row>\n\n        );\n      })}\n          </Container>\n  );\n};\nexport default List;"]},"metadata":{},"sourceType":"module"}