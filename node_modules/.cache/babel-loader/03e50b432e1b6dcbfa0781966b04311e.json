{"ast":null,"code":"var _jsxFileName = \"/home/moringa/React/Class-Schedule-React/src/components/Slogin.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nfunction Slogin(_ref) {\n  let {\n    login,\n    isAuthenticated,\n    isStudent\n  } = _ref;\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const {\n    username,\n    password\n  } = user;\n\n  const loginChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    login({\n      username,\n      password\n    });\n  };\n\n  if (isAuthenticated && isStudent) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/student/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    });\n  } else if (isAuthenticated && !isStudent) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/tm/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"LOGIN PAGE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => handleLoginSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: e => loginChange(e),\n      placeholder: \"username...\",\n      name: \"username\",\n      value: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: e => loginChange(e),\n      placeholder: \"username...\",\n      name: \"password\",\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Login\"))))));\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  isStudent: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isStudent: state.auth.isStudent\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/home/moringa/React/Class-Schedule-React/src/components/Slogin.js"],"names":["React","useState","Redirect","connect","login","PropTypes","Slogin","isAuthenticated","isStudent","user","setUser","username","password","loginChange","e","target","name","value","handleLoginSubmit","preventDefault","Login","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState}from 'react'\nimport {Redirect} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {login} from \"../actions/auth\"\nimport PropTypes from \"prop-types\"\n\nfunction Slogin ({login, isAuthenticated, isStudent}) {\n    const [user, setUser]=useState({\n        username:\"\",\n        password:\"\"\n    })\n\n    const {username, password}=user\n\n    const loginChange=(e)=>setUser({...user, [e.target.name]:e.target.value})\n\n    const handleLoginSubmit=(e)=>{\n        e.preventDefault();\n        login({username, password})\n    }\n   \n    if (isAuthenticated && isStudent){\n       return <Redirect to=\"/student/dashboard\" />\n   }else if(isAuthenticated && !isStudent){\n       return<Redirect to=\"/tm/dashboard\" />\n   }else{\n  return (\n    <div>\n        <h3>LOGIN PAGE</h3>\n        <div className='container mb-5'>\n            \n            <div className='row'>\n                <div className='col-md-6 mx-auto'>\n                <h2>Sign In</h2>\n                    <form onSubmit={(e)=>handleLoginSubmit(e)}>\n                    <div className=\"form-group mb-3\">\n                        <label>Username</label>\n                        <input type=\"text\" \n                        className=\"form-control\"\n                        onChange={ e =>loginChange(e)} \n                        placeholder=\"username...\" \n                        name=\"username\"  value={username}/>\n                    </div>\n                    <div className=\"form-group mb-3\">\n                        <label>Password</label>\n                        <input type=\"text\" \n                        className=\"form-control\"\n                        onChange={ e =>loginChange(e)} \n                        placeholder=\"username...\" \n                        name=\"password\"  value={password}/>\n                    </div>\n                    <button className='btn btn-primary'>Login</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    </div>\n  )\n}\n}\n\nLogin.propTypes={\n    login:PropTypes.func.isRequired,\n    isAuthenticated:PropTypes.bool,\n    isStudent:PropTypes.bool\n}\n\nconst mapStateToProps =state =>({\n    isAuthenticated:state.auth.isAuthenticated,\n    isStudent:state.auth.isStudent\n})\n\nexport default connect(mapStateToProps, {login})(Login)"]},"metadata":{},"sourceType":"module"}